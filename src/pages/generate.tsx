import Button from "@/components/Button";
import FormGroup from "@/components/FormGroup";
import Input from "@/components/Input";
import { api } from "@/utils/api";
import { type NextPage } from "next";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import { useState } from "react";
import Image from "next/image";

const GeneratePage: NextPage = () => {
  const [form, setForm] = useState({
    prompt: "",
  });
  const [imageUrl, setImageUrl] = useState("");
  const generateIcon = api.generate.generateIcon.useMutation({
    onSuccess(data) {
      console.log("mutation finished", data);
      if (!data.imageUrl) return;
      setImageUrl(data.imageUrl);
    },
  });
  const session = useSession();
  const isLoggedIn = !!session.data;

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    generateIcon.mutate({
      prompt: form.prompt,
    });
    setForm({ prompt: "" });
  };

  const updateForm = (key: string) => {
    return function (e: React.ChangeEvent<HTMLInputElement>) {
      setForm({ ...form, [key]: e.target.value });
    };
  };

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center">
        {!isLoggedIn && (
          <Button
            onClick={() => {
              signOut().catch(console.error);
            }}
          >
            Login
          </Button>
        )}
        {isLoggedIn && (
          <Button
            onClick={() => {
              signIn().catch(console.error);
            }}
          >
            Logout
          </Button>
        )}
        <form onSubmit={handleSubmit} className="flex flex-col gap-4">
          <FormGroup>
            <label htmlFor="prompt">Prompt</label>
            <Input value={form.prompt} onChange={updateForm("prompt")} />
          </FormGroup>
          <Button>Submit</Button>
        </form>
        {imageUrl && (
          <Image src={imageUrl} alt="Prompt" width="200" height="200" />
        )}
      </main>
    </>
  );
};

export default GeneratePage;
